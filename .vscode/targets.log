make all --print-data-base --no-builtin-variables --no-builtin-rules --question
# GNU Make 3.81
# Copyright (C) 2006  Free Software Foundation, Inc.
# This is free software; see the source for copying conditions.
# There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

# This program built for i386-apple-darwin11.3.0
 
make: *** No rule to make target `all'.  Stop.


# Make data base, printed on Sat Jul  2 11:13:15 2022

# Variables

# automatic
<D = $(patsubst %/,%,$(dir $<))
# makefile (from `.build-harness', line 18)
BUILD_HARNESS_BRANCH = master
# automatic
?F = $(notdir $?)
# environment
VSCODE_LOG_NATIVE = false
# automatic
?D = $(patsubst %/,%,$(dir $?))
# automatic
@D = $(patsubst %/,%,$(dir $@))
# automatic
@F = $(notdir $@)
# makefile
CURDIR := /Users/joe/git-proj/cloudposse/terraform-aws-rds-cloudwatch-sns-alarms
# makefile (from `.build-harness', line 13)
SHELL = /bin/bash
# makefile (from `.build-harness', line 11)
BUILD_HARNESS_TEMPLATES_MAKEFILE_GUARD := included
# environment
VSCODE_NLS_CONFIG = {"locale":"en-gb","availableLanguages":{},"_languagePackSupport":true}
# environment
_ = /usr/bin/make
# makefile (from `.build-harness', line 108)
DEFAULT_DOCKER_ENVS := AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY AWS_SESSION_TOKEN TERM AWS_PROFILE AWS_REGION AWS_DEFAULT_PROFILE AWS_DEFAULT_REGION
# makefile (from `.build-harness', line 1)
MAKEFILE_LIST :=  Makefile .build-harness
# makefile (from `.build-harness', line 15)
BUILD_HARNESS_ORG = cloudposse
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
# environment
VSCODE_VERBOSE_LOGGING = true
# environment
__CFBundleIdentifier = com.microsoft.VSCode
# makefile (from `.build-harness', line 33)
harness_install = curl --retry 5 --fail --silent --retry-delay 1 https://raw.githubusercontent.com/$(BUILD_HARNESS_ORG)/$(BUILD_HARNESS_PROJECT)/$(BUILD_HARNESS_BRANCH)/bin/install.sh | bash -s "$(BUILD_HARNESS_ORG)" "$(BUILD_HARNESS_PROJECT)" "$(BUILD_HARNESS_BRANCH)"
# environment
P9K_SSH = 0
# environment
VSCODE_IPC_HOOK_EXTHOST = /var/folders/jq/8gmds4xs5pg41gnpw7gv0fkm0000gn/T/vscode-ipc-ec446827-e1e2-450b-9131-61dbd4a83a97.sock
# environment
VSCODE_CWD = /
# environment
GOPROXY = https://proxy.golang.org,direct
# environment
PATH = /Users/joe/.phpenv/shims:/Users/joe/.phpenv/bin:/Users/joe/.composer/vendor/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Library/Frameworks/Mono.framework/Versions/Current/Commands
# environment
LSCOLORS = Gxfxcxdxbxegedabagacad
# makefile (from `.build-harness', line 17)
BUILD_HARNESS_DOCKER_IMAGE = $(BUILD_HARNESS_ORG)/$(BUILD_HARNESS_PROJECT)
# makefile (from `.build-harness', line 19)
BUILD_HARNESS_CLONE_URL = https://github.com/$(BUILD_HARNESS_ORG)/$(BUILD_HARNESS_PROJECT).git
# environment
GOPATH = /Users/joe/go
# environment
LaunchInstanceID = 07509AC6-9FFF-48E3-A157-19D33DB103B5
# environment
VSCODE_LOG_STACK = false
# environment
ELECTRON_RUN_AS_NODE = 1
# makefile (from `.build-harness', line 42)
harness_auto_init = if [[ -f "/build-harness/Makefile" || -f "/$(BUILD_HARNESS_PROJECT)/Makefile" ]]; then echo "[.build-harness]: In $(BUILD_HARNESS_PROJECT) docker container, skipping auto-init" ; elif grep -q docker /proc/1/cgroup 2>/dev/null; then echo "[.build-harness]: In unknown docker container, skipping auto-init" ; elif [[ "$(BUILD_HARNESS_PATH)" != "$(BUILD_HARNESS_PATH_LOCAL)" && -f "$(BUILD_HARNESS_PATH)/Makefile" ]]; then echo "[.build-harness]: Using external $(BUILD_HARNESS_PATH), skipping auto-init" ; elif [[ "$(BUILD_HARNESS_PATH)" == "$(BUILD_HARNESS_PATH_LOCAL)" && -f "$(BUILD_HARNESS_PATH)/Makefile" && "$$(git -C '$(BUILD_HARNESS_PATH_LOCAL)' ls-remote '$(BUILD_HARNESS_CLONE_URL)' '$(BUILD_HARNESS_BRANCH)' | cut -f1)" == "$$(git -C '$(BUILD_HARNESS_PATH_LOCAL)' rev-parse HEAD)" ]]; then echo "[.build-harness]: Clone of $(BUILD_HARNESS_PROJECT) is up-to-date, skipping auto-init" ; else $(harness_install) ; fi
# default
 
.FEATURES := target-specific order-only second-expansion else-if archives jobserver check-symlink
# environment
SSH_AUTH_SOCK = /private/tmp/com.apple.launchd.yNlToYNFI5/Listeners
# automatic
%F = $(notdir $%)
# environment
VSCODE_PIPE_LOGGING = true
# makefile (from `.build-harness', line 110)
EXTRA_DOCKER_ENVS = AWS_CONFIG_FILE AWS_SHARED_CREDENTIALS_FILE
# makefile (from `.build-harness', line 14)
PWD = $(shell pwd)
# environment
ORIGINAL_XDG_CURRENT_DESKTOP = undefined
# environment
GOMODCACHE = /Users/joe/go/pkg/mod
# environment
HOME = /Users/joe
# default
MAKEFILEPATH = $(shell /usr/bin/xcode-select -print-path 2>/dev/null || echo /Developer)/Makefiles
# environment
VSCODE_CODE_CACHE_PATH = /Users/joe/Library/Application Support/Code/CachedData/30d9c6cd9483b2cc586687151bcbcd635f373630
# environment
LOGNAME = joe
# makefile (from `Makefile', line 4)
README_DEPS = docs/targets.md docs/terraform.md
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = true
# environment
ZSH = /Users/joe/.oh-my-zsh
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# automatic
^D = $(patsubst %/,%,$(dir $^))
# environment
XPC_FLAGS = 0x0
# default
MAKE = $(MAKE_COMMAND)
# default
MAKECMDGOALS := all
# environment
SHLVL = 1
# default
MAKE_VERSION := 3.81
# makefile (from `.build-harness', line 23)
BUILD_HARNESS_PATH_LOCAL := /Users/joe/git-proj/cloudposse/terraform-aws-rds-cloudwatch-sns-alarms/build-harness
# environment
USER = joe
# makefile
.DEFAULT_GOAL := init
# environment
LESS = -R
# automatic
%D = $(patsubst %/,%,$(dir $%))
# makefile (from `.build-harness', line 27)
BUILD_HARNESS_DOCKER_SHA_TAG_CMD := git -C "/Users/joe/git-proj/cloudposse/terraform-aws-rds-cloudwatch-sns-alarms/build-harness" log -n 1 --format=sha-%h 2>/dev/null || echo latest
# default
MAKE_COMMAND := /Library/Developer/CommandLineTools/usr/bin/make
# default
.VARIABLES := 
# environment
TMPDIR = /var/folders/jq/8gmds4xs5pg41gnpw7gv0fkm0000gn/T/
# automatic
*F = $(notdir $*)
# environment
VSCODE_IPC_HOOK = /Users/joe/Library/Application Support/Code/1.68.1-main.sock
# makefile
MAKEFLAGS = Rrqp
# environment
MFLAGS = -Rrqp
# automatic
*D = $(patsubst %/,%,$(dir $*))
# environment
XPC_SERVICE_NAME = application.com.microsoft.VSCode.26084443.26084449
# automatic
+D = $(patsubst %/,%,$(dir $+))
# automatic
+F = $(notdir $+)
# makefile (from `.build-harness', line 30)
BUILD_HARNESS_AUTO_INIT = false
# environment
__CF_USER_TEXT_ENCODING = 0x1F5:0:15
# environment
COMMAND_MODE = unix2003
# default
MAKEFILES := 
# automatic
<F = $(notdir $<)
# makefile (from `.build-harness', line 111)
DOCKER_ENVS = $(DEFAULT_DOCKER_ENVS) $(EXTRA_DOCKER_ENVS)
# environment
PAGER = less
# environment
LC_ALL = C
# makefile (from `.build-harness', line 24)
BUILD_HARNESS_PATH := /Users/joe/git-proj/cloudposse/terraform-aws-rds-cloudwatch-sns-alarms/build-harness
# environment
SECURITYSESSIONID = 186c3
# automatic
^F = $(notdir $^)
# default
SUFFIXES := 
# makefile (from `.build-harness', line 16)
BUILD_HARNESS_PROJECT = build-harness
# default
.INCLUDE_DIRS = /usr/local/include
# environment
MAKELEVEL := 0
# environment
LANG = C
# environment
VSCODE_PID = 703
# variable set hash-table stats:
# Load=88/1024=9%, Rehash=0, Collisions=30/265=11%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# . (device 16777221, inode 28990983): 20 files, no impossibilities.
# / (device 16777221, inode 2): 21 files, no impossibilities.

# 41 files, no impossibilities in 2 directories.

# Implicit Rules

# No implicit rules.

# Files

build-harness/shell-slim: build-harness/runner
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
# makefile (from `.build-harness', line 135)
# ARGS := -l || true
# makefile (from `.build-harness', line 127)
# RUNNER_DOCKER_IMAGE = $(BUILD_HARNESS_DOCKER_IMAGE)
# makefile (from `.build-harness', line 130)
# RUNNER_DOCKER_TAG = $(shell docker inspect --type=image $(RUNNER_DOCKER_IMAGE):$(RUNNER_DOCKER_SHA_TAG) >/dev/null 2>&1 && echo "$(RUNNER_DOCKER_SHA_TAG) " || echo "slim-$(RUNNER_DOCKER_SHA_TAG)")
# makefile (from `.build-harness', line 129)
# RUNNER_DOCKER_SHA_TAG = $(shell $(BUILD_HARNESS_DOCKER_SHA_TAG_CMD))
# makefile (from `.build-harness', line 136)
# ENTRYPOINT := /bin/bash
# makefile (from `.build-harness', line 134)
# TARGETS = $(TARGET)
# variable set hash-table stats:
# Load=6/32=19%, Rehash=0, Collisions=8/14=57%

safe-directory:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `.build-harness', line 90):
	[[ -n "$$GITHUB_WORKSPACE" ]] && git config --global --add safe.directory "$$GITHUB_WORKSPACE" || git config --global --add safe.directory '*'
	

pr/pre-commit: build-harness/runner
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
# makefile (from `.build-harness', line 120)
# RUNNER_DOCKER_TAG = $(shell $(BUILD_HARNESS_DOCKER_SHA_TAG_CMD))
# makefile (from `.build-harness', line 121)
# RUNNER_DOCKER_IMAGE = $(BUILD_HARNESS_DOCKER_IMAGE)
# makefile (from `.build-harness', line 139)
# ENTRYPOINT := /usr/bin/make
# makefile (from `.build-harness', line 148)
# ARGS := pre-commit/run
# variable set hash-table stats:
# Load=4/32=12%, Rehash=0, Collisions=3/6=50%

tf14-upgrade: build-harness/runner
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
# makefile (from `.build-harness', line 151)
# TERRAFORM_FORCE_README := true
# makefile (from `.build-harness', line 127)
# RUNNER_DOCKER_IMAGE = $(BUILD_HARNESS_DOCKER_IMAGE)
# makefile (from `.build-harness', line 130)
# RUNNER_DOCKER_TAG = $(shell docker inspect --type=image $(RUNNER_DOCKER_IMAGE):$(RUNNER_DOCKER_SHA_TAG) >/dev/null 2>&1 && echo "$(RUNNER_DOCKER_SHA_TAG) " || echo "slim-$(RUNNER_DOCKER_SHA_TAG)")
# makefile (from `.build-harness', line 129)
# RUNNER_DOCKER_SHA_TAG = $(shell $(BUILD_HARNESS_DOCKER_SHA_TAG_CMD))
# makefile (from `.build-harness', line 139)
# ENTRYPOINT := /usr/bin/make
# makefile (from `.build-harness', line 152)
# ARGS := github/init terraform/v14-rewrite
# variable set hash-table stats:
# Load=6/32=19%, Rehash=0, Collisions=3/9=33%

# Not a target:
all:
#  Command-line target.
#  Implicit rule search has been done.
#  File does not exist.
#  File has not been updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/0=0%

.PHONY: init clean safe-directory build-harness/shell builder build-harness/shell/pull builder/pull builder/build builder-slim/build build-harness/shell-slim builder-slim pr/auto-format pr/auto-format/host pr/readme pr/readme/host pr/pre-commit pr/github-update pr/github-update/host tf14-upgrade tester tester/pull build-harness/runner reset-owner
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

build-harness/shell/pull:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
# makefile (from `.build-harness', line 94)
# BUILD_HARNESS_DOCKER_SHA_TAG = $(shell $(BUILD_HARNESS_DOCKER_SHA_TAG_CMD))
# variable set hash-table stats:
# Load=1/32=3%, Rehash=0, Collisions=0/2=0%
#  commands to execute (from `.build-harness', line 96):
	docker pull $(BUILD_HARNESS_DOCKER_IMAGE):$(BUILD_HARNESS_DOCKER_SHA_TAG)
	@[[ "$(BUILD_HARNESS_DOCKER_SHA_TAG)" == "latest" ]] || docker pull $(BUILD_HARNESS_DOCKER_IMAGE):latest
	

builder-slim: build-harness/runner
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
# makefile (from `.build-harness', line 135)
# ARGS := -l || true
# makefile (from `.build-harness', line 127)
# RUNNER_DOCKER_IMAGE = $(BUILD_HARNESS_DOCKER_IMAGE)
# makefile (from `.build-harness', line 130)
 
# RUNNER_DOCKER_TAG = $(shell docker inspect --type=image $(RUNNER_DOCKER_IMAGE):$(RUNNER_DOCKER_SHA_TAG) >/dev/null 2>&1 && echo "$(RUNNER_DOCKER_SHA_TAG) " || echo "slim-$(RUNNER_DOCKER_SHA_TAG)")
# makefile (from `.build-harness', line 129)
# RUNNER_DOCKER_SHA_TAG = $(shell $(BUILD_HARNESS_DOCKER_SHA_TAG_CMD))
# makefile (from `.build-harness', line 136)
# ENTRYPOINT := /bin/bash
# makefile (from `.build-harness', line 134)
# TARGETS = $(TARGET)
# variable set hash-table stats:
# Load=6/32=19%, Rehash=0, Collisions=8/14=57%

# Not a target:
.SUFFIXES:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
Makefile:
#  Implicit rule search has been done.
#  Last modified 2022-07-02 11:13:01
#  File has been updated.
#  Successfully updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/0=0%

pr/github-update/host: safe-directory
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
# makefile (from `.build-harness', line 143)
# ARGS := github/update
# variable set hash-table stats:
# Load=1/32=3%, Rehash=0, Collisions=0/1=0%
#  commands to execute (from `.build-harness', line 146):
	$(MAKE) $(ARGS)
	

builder/build:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
# makefile (from `.build-harness', line 99)
# DOCKER_IMAGE_NAME = $(BUILD_HARNESS_DOCKER_IMAGE):$(BUILD_HARNESS_DOCKER_SHA_TAG)
# makefile (from `.build-harness', line 94)
# BUILD_HARNESS_DOCKER_SHA_TAG = $(shell $(BUILD_HARNESS_DOCKER_SHA_TAG_CMD))
# variable set hash-table stats:
# Load=2/32=6%, Rehash=0, Collisions=0/3=0%
#  commands to execute (from `.build-harness', line 101):
	@$(MAKE) --no-print-directory docker/build
	

tester: build-harness/runner
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
# makefile (from `.build-harness', line 116)
# MOUNT_HOME = $(shell [ -d "$$HOME" ] && printf -- "-e HOME -v \"%s\":\"%s\"" "$$HOME" "$$HOME")
# makefile (from `.build-harness', line 158)
# TEST_HARNESS_DOCKER_TAG = latest
# makefile (from `.build-harness', line 157)
# TEST_HARNESS_DOCKER_IMAGE = cloudposse/test-harness
# makefile (from `.build-harness', line 117)
# TARGETS = $(TARGET)
# makefile (from `.build-harness', line 159)
# RUNNER_DOCKER_IMAGE = $(TEST_HARNESS_DOCKER_IMAGE)
# makefile (from `.build-harness', line 160)
# RUNNER_DOCKER_TAG = $(TEST_HARNESS_DOCKER_TAG)
# makefile (from `.build-harness', line 119)
# ENTRYPOINT := /bin/bash
# makefile (from `.build-harness', line 118)
# ARGS := -l || true
# variable set hash-table stats:
# Load=8/32=25%, Rehash=0, Collisions=7/18=39%

reset-owner:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `.build-harness', line 183):
	@if [[ -n $$(find . -xdev -user 0 -print) ]]; then \
	printf "\n* To reset ownership on files, run:\n  sudo find . -xdev -user 0 -exec chown $$USER {} \;\n\n" ; \
	else \
	printf "\n* No root-owned files found\n\n" ; \
	fi
	

pr/readme: build-harness/runner
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
# makefile (from `.build-harness', line 120)
# RUNNER_DOCKER_TAG = $(shell $(BUILD_HARNESS_DOCKER_SHA_TAG_CMD))
# makefile (from `.build-harness', line 121)
# RUNNER_DOCKER_IMAGE = $(BUILD_HARNESS_DOCKER_IMAGE)
# makefile (from `.build-harness', line 129)
# RUNNER_DOCKER_SHA_TAG = $(shell $(BUILD_HARNESS_DOCKER_SHA_TAG_CMD))
# makefile (from `.build-harness', line 139)
# ENTRYPOINT := /usr/bin/make
# makefile (from `.build-harness', line 142)
# ARGS := readme/deps readme
# variable set hash-table stats:
# Load=5/32=16%, Rehash=0, Collisions=4/10=40%

builder/pull:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
# makefile (from `.build-harness', line 94)
# BUILD_HARNESS_DOCKER_SHA_TAG = $(shell $(BUILD_HARNESS_DOCKER_SHA_TAG_CMD))
# variable set hash-table stats:
# Load=1/32=3%, Rehash=0, Collisions=0/2=0%
#  commands to execute (from `.build-harness', line 96):
	docker pull $(BUILD_HARNESS_DOCKER_IMAGE):$(BUILD_HARNESS_DOCKER_SHA_TAG)
	@[[ "$(BUILD_HARNESS_DOCKER_SHA_TAG)" == "latest" ]] || docker pull $(BUILD_HARNESS_DOCKER_IMAGE):latest
	

pr/auto-format: build-harness/runner
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
# makefile (from `.build-harness', line 127)
# RUNNER_DOCKER_IMAGE = $(BUILD_HARNESS_DOCKER_IMAGE)
# makefile (from `.build-harness', line 130)
# RUNNER_DOCKER_TAG = $(shell docker inspect --type=image $(RUNNER_DOCKER_IMAGE):$(RUNNER_DOCKER_SHA_TAG) >/dev/null 2>&1 && echo "$(RUNNER_DOCKER_SHA_TAG) " || echo "slim-$(RUNNER_DOCKER_SHA_TAG)")
# makefile (from `.build-harness', line 129)
# RUNNER_DOCKER_SHA_TAG = $(shell $(BUILD_HARNESS_DOCKER_SHA_TAG_CMD))
# makefile (from `.build-harness', line 139)
# ENTRYPOINT := /usr/bin/make
# makefile (from `.build-harness', line 141)
# ARGS := github/update terraform/fmt readme
# variable set hash-table stats:
# Load=5/32=16%, Rehash=0, Collisions=3/8=38%

# Not a target:
.build-harness:
#  A default, MAKEFILES, or -include/sinclude makefile.
#  Implicit rule search has been done.
#  Last modified 2022-07-02 11:13:15
#  File has been updated.
#  Successfully updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/0=0%

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

builder-slim/build:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
# makefile (from `.build-harness', line 103)
# DOCKER_IMAGE_NAME = $(BUILD_HARNESS_DOCKER_IMAGE):slim-$(BUILD_HARNESS_DOCKER_SHA_TAG)
# makefile (from `.build-harness', line 104)
# DOCKER_FILE := Dockerfile.slim
# makefile (from `.build-harness', line 94)
# BUILD_HARNESS_DOCKER_SHA_TAG = $(shell $(BUILD_HARNESS_DOCKER_SHA_TAG_CMD))
# variable set hash-table stats:
# Load=3/32=9%, Rehash=0, Collisions=0/4=0%
#  commands to execute (from `.build-harness', line 106):
	@$(MAKE) --no-print-directory docker/build
	

clean::
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `.build-harness', line 75):
	@if [ -d "$(BUILD_HARNESS_PATH)" ]; then \
	if [ -d build-harness ] && [ "$(BUILD_HARNESS_PATH)" -ef build-harness ]; then \
	echo rm -rf build-harness; \
	rm -rf build-harness; \
	else \
	echo Not removing build harness from "$(BUILD_HARNESS_PATH)" because it appears to be shared.; \
	echo If you are sure you want to delete it, run: ; \
	echo '   rm -rf "$(BUILD_HARNESS_PATH)"'; \
	fi; \
	fi
	

init::
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `.build-harness', line 70):
	@ $(harness_install)
	

build-harness/shell: build-harness/runner
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
# makefile (from `.build-harness', line 116)
# MOUNT_HOME = $(shell [ -d "$$HOME" ] && printf -- "-e HOME -v \"%s\":\"%s\"" "$$HOME" "$$HOME")
# makefile (from `.build-harness', line 117)
# TARGETS = $(TARGET)
# makefile (from `.build-harness', line 121)
# RUNNER_DOCKER_IMAGE = $(BUILD_HARNESS_DOCKER_IMAGE)
# makefile (from `.build-harness', line 120)
# RUNNER_DOCKER_TAG = $(shell $(BUILD_HARNESS_DOCKER_SHA_TAG_CMD))
# makefile (from `.build-harness', line 119)
# ENTRYPOINT := /bin/bash
# makefile (from `.build-harness', line 118)
# ARGS := -l || true
 
# variable set hash-table stats:
# Load=6/32=19%, Rehash=0, Collisions=5/14=36%
#  commands to execute (from `.build-harness', line 123):
	@exit 0
	

pr/readme/host: safe-directory
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
# makefile (from `.build-harness', line 142)
# ARGS := readme/deps readme
# variable set hash-table stats:
# Load=1/32=3%, Rehash=0, Collisions=0/1=0%
#  commands to execute (from `.build-harness', line 146):
	$(MAKE) $(ARGS)
	

lint:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 10):
	$(SELF) terraform/install terraform/get-modules terraform/get-plugins terraform/lint terraform/validate
	

# Not a target:
/Users/joe/git-proj/cloudposse/terraform-aws-rds-cloudwatch-sns-alarms/build-harness/Makefile:
#  A default, MAKEFILES, or -include/sinclude makefile.
#  Implicit rule search has been done.
#  File does not exist.
#  File has been updated.
#  Failed to be updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/0=0%

pr/github-update: build-harness/runner
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
# makefile (from `.build-harness', line 120)
# RUNNER_DOCKER_TAG = $(shell $(BUILD_HARNESS_DOCKER_SHA_TAG_CMD))
# makefile (from `.build-harness', line 121)
# RUNNER_DOCKER_IMAGE = $(BUILD_HARNESS_DOCKER_IMAGE)
# makefile (from `.build-harness', line 139)
# ENTRYPOINT := /usr/bin/make
# makefile (from `.build-harness', line 143)
# ARGS := github/update
# variable set hash-table stats:
# Load=4/32=12%, Rehash=0, Collisions=3/6=50%

builder: build-harness/runner
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
# makefile (from `.build-harness', line 116)
# MOUNT_HOME = $(shell [ -d "$$HOME" ] && printf -- "-e HOME -v \"%s\":\"%s\"" "$$HOME" "$$HOME")
# makefile (from `.build-harness', line 117)
# TARGETS = $(TARGET)
# makefile (from `.build-harness', line 121)
# RUNNER_DOCKER_IMAGE = $(BUILD_HARNESS_DOCKER_IMAGE)
# makefile (from `.build-harness', line 120)
# RUNNER_DOCKER_TAG = $(shell $(BUILD_HARNESS_DOCKER_SHA_TAG_CMD))
# makefile (from `.build-harness', line 119)
# ENTRYPOINT := /bin/bash
# makefile (from `.build-harness', line 118)
# ARGS := -l || true
# variable set hash-table stats:
# Load=6/32=19%, Rehash=0, Collisions=5/14=36%
#  commands to execute (from `.build-harness', line 123):
	@exit 0
	

tester/pull:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
# makefile (from `.build-harness', line 158)
# TEST_HARNESS_DOCKER_TAG = latest
# makefile (from `.build-harness', line 157)
# TEST_HARNESS_DOCKER_IMAGE = cloudposse/test-harness
# variable set hash-table stats:
# Load=2/32=6%, Rehash=0, Collisions=2/4=50%
#  commands to execute (from `.build-harness', line 164):
	docker pull $(TEST_HARNESS_DOCKER_IMAGE):$(TEST_HARNESS_DOCKER_TAG)
	

pr/auto-format/host: safe-directory
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
# makefile (from `.build-harness', line 141)
# ARGS := github/update terraform/fmt readme
# variable set hash-table stats:
# Load=1/32=3%, Rehash=0, Collisions=0/1=0%
#  commands to execute (from `.build-harness', line 146):
	$(MAKE) $(ARGS)
	

build-harness/runner:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `.build-harness', line 170):
	$(info Starting $(RUNNER_DOCKER_IMAGE):$(RUNNER_DOCKER_TAG))
	docker run --name build-harness \
	--rm -it \
	-e PACKAGES_PREFER_HOST=true \
	$(addprefix -e ,$(DOCKER_ENVS)) \
	$(MOUNT_HOME) \
	-v $(CURDIR):/opt \
	--workdir /opt \
	--entrypoint $(ENTRYPOINT) \
	$(RUNNER_DOCKER_IMAGE):$(RUNNER_DOCKER_TAG) $(ARGS)
	

# files hash-table stats:
# Load=31/1024=3%, Rehash=0, Collisions=11/178=6%
# VPATH Search Paths

# No `vpath' search paths.

# No general (`VPATH' variable) search path.

# # of strings in strcache: 3
# # of strcache buffers: 1
# strcache size: total = 4096 / max = 4096 / min = 4096 / avg = 4096
# strcache free: total = 3978 / max = 3978 / min = 3978 / avg = 3978

# Finished Make data base on Sat Jul  2 11:13:15 2022

 
